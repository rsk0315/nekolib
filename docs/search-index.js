var searchIndex = JSON.parse('{\
"nekolib_doc":{"doc":"","t":"DDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDIIQSSSSSSIDDDDDDIDKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLIIQDKKIDDDDDDIKKGDQIHILLLLLLKLLKOOLLLGDQIHIKLKOOOOOOGGIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLGGIDKIIIIINIINIIDIIQNIELLLLKLLLLLKLLLKLKLLKLLLLLLLIIIIIIIIIIIQKKKDNNNIEKK","n":["FoldableQueue","PeekMutTmp","UnionFind","VecSegtree","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","count","deref","deref_mut","drop","equiv","fmt","fold","fold","fold_bisect_from","fold_bisect_to","from","from","from","from","from","from","from_iter","index","into","into","into","into","new","new","partition","partition_len","peek_mut","pop","push","repr","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unite","FoldableQueue","UnionFind","PeekMutTmp","VecSegtree","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","BinIter","Binary","Iter","LG_W","LG_W","LG_W","LG_W","LG_W","LG_W","Pdep","PdepPextMaskU128","PdepPextMaskU16","PdepPextMaskU32","PdepPextMaskU64","PdepPextMaskU8","PdepPextMaskUsize","Pext","UIntIter","bin_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","from","from","from","from","from","from","from","get","get","get","get","get","get","into","into","into","into","into","into","into","into_iter","new","new","new","new","new","new","new","next","pdep","pext","pop","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","BinIter","Binary","Iter","UIntIter","bin_iter","pop","Pdep","PdepPextMaskU128","PdepPextMaskU16","PdepPextMaskU32","PdepPextMaskU64","PdepPextMaskU8","PdepPextMaskUsize","Pext","pdep","pext","AutoSource","OnceSource","Output","Readable","STDIN_SOURCE","Source","borrow","borrow_mut","from","from","into","new","next_token","next_token","next_token_unwrap","read","read_value","scan","try_from","try_into","type_id","AutoSource","OnceSource","Output","Readable","STDIN_SOURCE","Source","next_token","next_token_unwrap","read","read_value","scan","qux1","qux_long","qux1","qux_long","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","add","add","add","add","add_assign","add_assign","borrow","borrow_mut","clone","clone_into","div","div","div","div","div_assign","div_assign","eq","equivalent","fmt","fmt","from","from","hash","into","modulus","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","new","product","product","rem_euclid_u32","sub","sub","sub","sub","sub_assign","sub_assign","sum","sum","to_owned","to_string","try_from","try_into","type_id","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","rem_euclid_u32","Associative","BinaryOp","Commutative","CommutativeGroup","CommutativeMonoid","EndIndexLen","Group","Identity","IndexOrder","Magma","Monoid","OpAdd","Recip","Semigroup","Set","StartIndexLen","UsizeBounds","UsizeOob","borrow","borrow","borrow_mut","borrow_mut","checked_to_range","default","fmt","fmt","from","from","id","id","into","into","op","op","recip","recip","resolve_bounds","to_range","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Associative","BinaryOp","Commutative","CommutativeGroup","CommutativeMonoid","Group","Identity","Magma","Monoid","Recip","Semigroup","Set","id","op","recip","OpAdd","EndIndexLen","IndexOrder","StartIndexLen","UsizeBounds","UsizeOob","checked_to_range","to_range"],"q":[[0,"nekolib_doc::ds"],[55,"nekolib_doc::ds::foldable_queue"],[56,"nekolib_doc::ds::union_find"],[57,"nekolib_doc::ds::vec_segtree"],[59,"nekolib_doc::fmt"],[165,"nekolib_doc::fmt::str_sep"],[171,"nekolib_doc::fmt::yes_no"],[172,"nekolib_doc::integer"],[276,"nekolib_doc::integer::bin_iter"],[282,"nekolib_doc::integer::pdep_pext"],[292,"nekolib_doc::io"],[313,"nekolib_doc::io::input"],[324,"nekolib_doc::macros"],[326,"nekolib_doc::macros::qux"],[328,"nekolib_doc::math"],[382,"nekolib_doc::math::modint"],[387,"nekolib_doc::ops"],[432,"nekolib_doc::ops::monoid"],[447,"nekolib_doc::ops::op_add"],[448,"nekolib_doc::ops::usize_bounds"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2 進法のイテレータ。","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2 進法のイテレータ。","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,11,7,4,1,11,7,4,1,4,4,4,1,7,11,7,11,11,1,11,11,11,7,4,11,11,1,11,7,4,1,7,1,1,11,7,7,1,1,11,7,4,1,11,7,4,1,11,7,4,1,0,0,0,0,0,0,0,0,0,0,0,22,23,24,25,26,27,28,22,23,24,25,26,27,28,22,22,22,22,22,22,22,22,22,23,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,26,26,26,26,26,27,27,27,27,27,28,28,28,28,28,22,23,24,25,26,27,28,22,23,24,25,26,27,28,22,23,24,25,26,27,28,22,23,24,25,26,27,28,22,23,24,25,26,27,28,22,23,24,25,26,27,28,0,0,0,0,0,0,0,0,0,57,30,31,32,33,34,35,0,0,0,0,0,0,0,0,0,57,42,30,31,32,33,34,35,42,30,31,32,33,34,35,30,31,32,33,34,35,30,31,32,33,34,35,42,30,31,32,33,34,35,30,31,32,33,34,35,42,30,31,32,33,34,35,42,42,30,31,32,33,34,35,42,58,59,41,30,31,32,33,34,35,42,30,31,32,33,34,35,42,30,31,32,33,34,35,42,30,31,32,33,34,35,0,0,57,0,57,41,0,0,0,0,0,0,0,0,58,59,0,0,60,0,0,0,46,46,46,46,46,46,48,46,48,60,0,0,46,46,46,0,0,60,0,0,0,48,48,60,0,0,0,0,0,0,0,0,0,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,50,49,49,49,49,49,49,49,49,49,49,49,49,49,0,0,0,0,50,0,0,0,0,0,54,0,0,54,0,0,0,0,0,61,54,0,0,54,55,54,55,12,55,54,55,54,55,62,55,54,55,61,55,63,55,54,12,54,54,55,54,55,54,55,0,0,0,0,0,0,0,0,0,0,0,61,62,61,63,0,54,54,54,0,0,12,12],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,2],2],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[1,2,2],5],[[[7,[[0,[6,3]]]],8],[[10,[9]]]],[[[11,[3]],12]],[[[7,[3]],13]],[[[11,[3]],2,14]],[[[11,[3]],2,14]],[[]],[[]],[[],[[11,[3]]]],[[[16,[15]]],[[11,[[0,[3,17]]]]]],[[]],[[]],[18,[[11,[[0,[3,17]]]]]],[[[11,[3]],2]],[[]],[[]],[[]],[[]],[2,1],[[],[[7,[17,3]]]],[1,[[16,[[16,[2,15]],15]]]],[1,2],[[[11,[3]],2],[[4,[3]]]],[[[7,[3]]],19],[[[7,[3]]]],[[1,2],2],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],20],[[],20],[[],20],[[],20],[[1,2,2],5],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[[22,[[0,[18,21]]]],8],[[10,[9]]]],[[23,8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[24,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[25,[[0,[18,21]]]],8],[[10,[9]]]],[[[26,[[0,[18,21]]]],8],[[10,[9]]]],[[[26,[[0,[18,21]]]],8],[[10,[9]]]],[[[26,[[0,[18,21]]]],8],[[10,[9]]]],[[[26,[[0,[18,21]]]],8],[[10,[9]]]],[[[26,[[0,[18,21]]]],8],[[10,[9]]]],[[[27,[[0,[18,21]]]],8],[[10,[9]]]],[[[27,[[0,[18,21]]]],8],[[10,[9]]]],[[[27,[[0,[18,21]]]],8],[[10,[9]]]],[[[27,[[0,[18,21]]]],8],[[10,[9]]]],[[[27,[[0,[18,21]]]],8],[[10,[9]]]],[[[28,[[0,[18,21]]]],8],[[10,[9]]]],[[[28,[[0,[18,21]]]],8],[[10,[9]]]],[[[28,[[0,[18,21]]]],8],[[10,[9]]]],[[[28,[[0,[18,21]]]],8],[[10,[9]]]],[[[28,[[0,[18,21]]]],8],[[10,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[30,36],[31,37],[32,38],[33,39],[34,40],[35,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[41,[[42,[41]]]],[36,30],[37,31],[38,32],[39,33],[40,34],[2,35],[[[42,[41]]],19],[[]],[[]],[[],[[19,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],10],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],0,0,0,0,[[]],[[],[[19,[5]]]],0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,[[]],[[]],[43,[[46,[[45,[[44,[36]]]]]]]],[[]],[[]],[47,[[46,[47]]]],[[],[[19,[29]]]],[[[46,[47]]],[[19,[29]]]],[[],29],[[[48,[47]]]],0,0,[[],10],[[],10],[[],20],0,0,0,0,0,0,[[],[[19,[29]]]],[[],29],[[[48,[47]]]],0,0,0,0,0,0,0,0,0,0,[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[]],[[]],[49,49],[[]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49],5],[[],5],[[49,8],[[10,[9]]]],[[49,8],[[10,[9]]]],[[]],[50,49],[[49,51]],[[]],[[],38],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[49],[49],[50,49],[52,49],[52,49],[38,38],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[[49,49]],[52,49],[52,49],[[]],[[],29],[[],10],[[],10],[[],20],0,0,0,0,[38,38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[2,[[10,[[53,[2]],54]]]],[[],55],[[54,8],[[10,[9]]]],[[[55,[6]],8],[[10,[9]]]],[[]],[[]],[[]],[[[55,[[56,[[56,[[56,[56]]]]]]]]],[[56,[[56,[[56,[[56,[56]]]]]]]]]],[[]],[[]],[[]],[55],[[]],[[[55,[[56,[[56,[[56,[56]]]]]]]],[56,[[56,[[56,[[56,[56]]]]]]]]],[[56,[[56,[[56,[[56,[56]]]]]]]]]],[54,[[53,[2]]]],[2,[[53,[2]]]],[54,29],[[],10],[[],10],[[],10],[[],10],[[],20],[[],20],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,[2,[[10,[[53,[2]],54]]]],[2,[[53,[2]]]]],"c":[],"p":[[3,"UnionFind"],[15,"usize"],[8,"Monoid"],[3,"PeekMutTmp"],[15,"bool"],[8,"Debug"],[3,"FoldableQueue"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"VecSegtree"],[8,"UsizeBounds"],[3,"RangeFull"],[8,"Fn"],[3,"Global"],[3,"Vec"],[8,"Default"],[8,"IntoIterator"],[4,"Option"],[3,"TypeId"],[8,"Clone"],[3,"SpaceSep"],[3,"YesNo"],[3,"PerLine"],[3,"StrSep"],[3,"SpaceSepUsize1"],[3,"PerLineUsize1"],[3,"StrSepUsize1"],[3,"String"],[3,"PdepPextMaskU8"],[3,"PdepPextMaskU16"],[3,"PdepPextMaskU32"],[3,"PdepPextMaskU64"],[3,"PdepPextMaskU128"],[3,"PdepPextMaskUsize"],[15,"u8"],[15,"u16"],[15,"u32"],[15,"u64"],[15,"u128"],[8,"Binary"],[3,"UIntIter"],[15,"str"],[15,"slice"],[3,"BufReader"],[3,"OnceSource"],[8,"BufRead"],[8,"Source"],[3,"StaticModInt"],[8,"RemEuclidU32"],[8,"Hasher"],[8,"Iterator"],[3,"Range"],[4,"UsizeOob"],[3,"OpAdd"],[8,"Sum"],[8,"BinIter"],[8,"Pdep"],[8,"Pext"],[8,"Readable"],[8,"BinaryOp"],[8,"Identity"],[8,"Recip"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
