var searchIndex = JSON.parse('{\
"nekolib_doc":{"doc":"","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDIIQDKLLLLLLLKLLLIIQDKKGDQIHILLLLLLKLLKOOLLLGDQIHIKLKOOOOOOGGIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLGGIDKIIIIINIINIIDIIQNIELLLLKLLLLKLLLKLKLLKLLLLLLLIIIIIIIIIIIQKKKDNNNIEKK","n":["PeekMutTmp","UnionFind","VecSegtree","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","count","deref","deref_mut","drop","equiv","fold","from","from","from","from","from","index","into","into","into","new","partition","partition_len","peek_mut","repr","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unite","UnionFind","PeekMutTmp","VecSegtree","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","BinIter","Binary","Iter","UIntIter","bin_iter","borrow","borrow_mut","from","into","into_iter","new","next","pop","try_from","try_into","type_id","BinIter","Binary","Iter","UIntIter","bin_iter","pop","AutoSource","OnceSource","Output","Readable","STDIN_SOURCE","Source","borrow","borrow_mut","from","from","into","new","next_token","next_token","next_token_unwrap","read","read_value","scan","try_from","try_into","type_id","AutoSource","OnceSource","Output","Readable","STDIN_SOURCE","Source","next_token","next_token_unwrap","read","read_value","scan","qux1","qux_long","qux1","qux_long","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","add","add","add","add","add_assign","add_assign","borrow","borrow_mut","clone","clone_into","div","div","div","div","div_assign","div_assign","eq","equivalent","fmt","fmt","from","from","hash","into","modulus","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","new","product","product","rem_euclid_u32","sub","sub","sub","sub","sub_assign","sub_assign","sum","sum","to_owned","to_string","try_from","try_into","type_id","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","rem_euclid_u32","Associative","BinaryOp","Commutative","CommutativeGroup","CommutativeMonoid","EndIndexLen","Group","Identity","IndexOrder","Magma","Monoid","OpAdd","Recip","Semigroup","Set","StartIndexLen","UsizeBounds","UsizeOob","borrow","borrow","borrow_mut","borrow_mut","checked_to_range","default","fmt","from","from","id","id","into","into","op","op","recip","recip","resolve_bounds","to_range","to_string","try_from","try_from","try_into","try_into","type_id","type_id","Associative","BinaryOp","Commutative","CommutativeGroup","CommutativeMonoid","Group","Identity","Magma","Monoid","Recip","Semigroup","Set","id","op","recip","OpAdd","EndIndexLen","IndexOrder","StartIndexLen","UsizeBounds","UsizeOob","checked_to_range","to_range"],"q":[[0,"nekolib_doc::ds"],[39,"nekolib_doc::ds::union_find"],[40,"nekolib_doc::ds::vec_segtree"],[42,"nekolib_doc::fmt"],[148,"nekolib_doc::fmt::str_sep"],[154,"nekolib_doc::fmt::yes_no"],[155,"nekolib_doc::integer"],[171,"nekolib_doc::integer::bin_iter"],[177,"nekolib_doc::io"],[198,"nekolib_doc::io::input"],[209,"nekolib_doc::macros"],[211,"nekolib_doc::macros::qux"],[213,"nekolib_doc::math"],[267,"nekolib_doc::math::modint"],[272,"nekolib_doc::ops"],[316,"nekolib_doc::ops::monoid"],[331,"nekolib_doc::ops::op_add"],[332,"nekolib_doc::ops::usize_bounds"]],"d":["","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2 進法のイテレータ。","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","2 進法のイテレータ。","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,6,4,1,6,4,1,4,4,4,1,6,1,6,6,6,4,6,1,6,4,1,1,1,6,1,1,6,4,1,6,4,1,6,4,1,0,0,0,0,0,0,0,0,0,0,15,18,19,20,21,22,23,15,18,19,20,21,22,23,15,15,15,15,15,15,15,15,15,18,19,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,21,21,21,21,21,22,22,22,22,22,23,23,23,23,23,15,18,19,20,21,22,23,15,18,19,20,21,22,23,15,18,19,20,21,22,23,15,18,19,20,21,22,23,15,18,19,20,21,22,23,15,18,19,20,21,22,23,0,0,0,0,0,0,0,0,0,44,0,44,26,26,26,26,26,26,26,25,26,26,26,0,0,44,0,44,25,0,0,45,0,0,0,32,32,32,32,32,32,34,32,34,45,0,0,32,32,32,0,0,45,0,0,0,34,34,45,0,0,0,0,0,0,0,0,0,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,35,35,35,35,35,35,35,35,35,35,35,35,35,0,0,0,0,36,0,0,0,0,0,41,0,0,41,0,0,0,0,0,46,41,0,0,42,41,42,41,7,42,41,42,41,47,42,42,41,46,42,48,42,41,7,41,42,41,42,41,42,41,0,0,0,0,0,0,0,0,0,0,0,46,47,46,48,0,41,41,41,0,0,7,7],"f":[0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[1,2],2],[[[4,[3]]]],[[[4,[3]]]],[[[4,[3]]]],[[1,2,2],5],[[[6,[3]],7]],[[]],[[]],[[],[[6,[3]]]],[[[9,[8]]],[[6,[[0,[3,10]]]]]],[[]],[[[6,[3]],2]],[[]],[[]],[[]],[2,1],[1,[[9,[[9,[2,8]],8]]]],[1,2],[[[6,[3]],2],[[4,[3]]]],[[1,2],2],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[1,2,2],5],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[[15,[[0,[13,14]]]],16],[[11,[17]]]],[[18,16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[19,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[20,[[0,[13,14]]]],16],[[11,[17]]]],[[[21,[[0,[13,14]]]],16],[[11,[17]]]],[[[21,[[0,[13,14]]]],16],[[11,[17]]]],[[[21,[[0,[13,14]]]],16],[[11,[17]]]],[[[21,[[0,[13,14]]]],16],[[11,[17]]]],[[[21,[[0,[13,14]]]],16],[[11,[17]]]],[[[22,[[0,[13,14]]]],16],[[11,[17]]]],[[[22,[[0,[13,14]]]],16],[[11,[17]]]],[[[22,[[0,[13,14]]]],16],[[11,[17]]]],[[[22,[[0,[13,14]]]],16],[[11,[17]]]],[[[22,[[0,[13,14]]]],16],[[11,[17]]]],[[[23,[[0,[13,14]]]],16],[[11,[17]]]],[[[23,[[0,[13,14]]]],16],[[11,[17]]]],[[[23,[[0,[13,14]]]],16],[[11,[17]]]],[[[23,[[0,[13,14]]]],16],[[11,[17]]]],[[[23,[[0,[13,14]]]],16],[[11,[17]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[25,[[26,[25]]]],[[[26,[25]]],27],[[],[[27,[5]]]],[[],11],[[],11],[[],12],0,0,0,0,[[]],[[],[[27,[5]]]],0,0,0,0,0,0,[[]],[[]],[28,[[32,[[31,[[30,[29]]]]]]]],[[]],[[]],[33,[[32,[33]]]],[[],[[27,[24]]]],[[[32,[33]]],[[27,[24]]]],[[],24],[[[34,[33]]]],0,0,[[],11],[[],11],[[],12],0,0,0,0,0,0,[[],[[27,[24]]]],[[],24],[[[34,[33]]]],0,0,0,0,0,0,0,0,0,0,[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[]],[[]],[35,35],[[]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35],5],[[],5],[[35,16],[[11,[17]]]],[[35,16],[[11,[17]]]],[[]],[36,35],[[35,37]],[[]],[[],38],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[35],[35],[36,35],[39,35],[39,35],[38,38],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[[35,35]],[39,35],[39,35],[[]],[[],24],[[],11],[[],11],[[],12],0,0,0,0,[38,38],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[2,[[11,[[40,[2]],41]]]],[[],42],[[41,16],[[11,[17]]]],[[]],[[]],[[]],[[[42,[[43,[[43,[[43,[43]]]]]]]]],[[43,[[43,[[43,[[43,[43]]]]]]]]]],[[]],[[]],[[]],[42],[[]],[[[42,[[43,[[43,[[43,[43]]]]]]]],[43,[[43,[[43,[[43,[43]]]]]]]]],[[43,[[43,[[43,[[43,[43]]]]]]]]]],[41,[[40,[2]]]],[2,[[40,[2]]]],[41,24],[[],11],[[],11],[[],11],[[],11],[[],12],[[],12],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,[2,[[11,[[40,[2]],41]]]],[2,[[40,[2]]]]],"c":[],"p":[[3,"UnionFind"],[15,"usize"],[8,"Monoid"],[3,"PeekMutTmp"],[15,"bool"],[3,"VecSegtree"],[8,"UsizeBounds"],[3,"Global"],[3,"Vec"],[8,"Default"],[4,"Result"],[3,"TypeId"],[8,"IntoIterator"],[8,"Clone"],[3,"SpaceSep"],[3,"Formatter"],[3,"Error"],[3,"YesNo"],[3,"PerLine"],[3,"StrSep"],[3,"SpaceSepUsize1"],[3,"PerLineUsize1"],[3,"StrSepUsize1"],[3,"String"],[8,"Binary"],[3,"UIntIter"],[4,"Option"],[15,"str"],[15,"u8"],[15,"slice"],[3,"BufReader"],[3,"OnceSource"],[8,"BufRead"],[8,"Source"],[3,"StaticModInt"],[8,"RemEuclidU32"],[8,"Hasher"],[15,"u32"],[8,"Iterator"],[3,"Range"],[4,"UsizeOob"],[3,"OpAdd"],[8,"Sum"],[8,"BinIter"],[8,"Readable"],[8,"BinaryOp"],[8,"Identity"],[8,"Recip"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
