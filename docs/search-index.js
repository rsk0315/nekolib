var searchIndex = JSON.parse('{\
"nekolib_doc":{"doc":"","t":"FFFFDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDFFFFIIQDKLLLLLLLKLLLIIQDKKOOOOGGDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLGGD","n":["bar1_fn","bar1_fn","baz1_fn","baz1_fn","PerLine","SpaceSep","StrSep","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","into","into","into","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","PerLine","SpaceSep","StrSep","foo1_fn","foo2_fn","foo1_fn","foo2_fn","BinIter","Binary","Iter","UIntIter","bin_iter","borrow","borrow_mut","from","into","into_iter","new","next","pop","try_from","try_into","type_id","BinIter","Binary","Iter","UIntIter","bin_iter","pop","qux1","qux_long","qux1","qux_long","ModInt1000000007","ModInt998244353","StaticModInt","add","add","add","add","add_assign","add_assign","borrow","borrow_mut","clone","clone_into","div","div","div","div","div_assign","div_assign","eq","equivalent","fmt","from","into","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","new","product","product","sub","sub","sub","sub","sub_assign","sub_assign","sum","sum","to_owned","try_from","try_into","type_id","ModInt1000000007","ModInt998244353","StaticModInt"],"q":[[0,"nekolib_doc::bar"],[1,"nekolib_doc::bar::bar1"],[2,"nekolib_doc::baz"],[3,"nekolib_doc::baz::baz1"],[4,"nekolib_doc::fmt"],[58,"nekolib_doc::fmt::str_sep"],[61,"nekolib_doc::foo"],[63,"nekolib_doc::foo::foo1"],[64,"nekolib_doc::foo::foo2"],[65,"nekolib_doc::integer"],[81,"nekolib_doc::integer::bin_iter"],[87,"nekolib_doc::macros"],[89,"nekolib_doc::macros::qux"],[91,"nekolib_doc::math"],[138,"nekolib_doc::math::modint"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","2 進法のイテレータ。","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","2 進法のイテレータ。","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,2,6,7,2,6,7,2,2,2,2,2,2,2,2,2,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,2,6,7,2,6,7,2,6,7,2,6,7,2,6,7,2,6,7,0,0,0,0,0,0,0,0,0,17,0,17,11,11,11,11,11,11,11,10,11,11,11,0,0,17,0,17,10,0,0,0,0,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0],"fc":[],"p":[[8,"Sized"],[3,"StrSep"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"SpaceSep"],[3,"PerLine"],[3,"String"],[3,"TypeId"],[8,"Binary"],[3,"UIntIter"],[4,"Option"],[15,"bool"],[3,"StaticModInt"],[15,"u32"],[8,"Iterator"],[8,"BinIter"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
