var searchIndex = JSON.parse('{\
"nekolib_doc":{"doc":"","t":"FFFFDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDFFFFIIQDKLLLLLLLKLLLIIQDKKOOOOGGIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLGGIDK","n":["bar1_fn","bar1_fn","baz1_fn","baz1_fn","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","foo1_fn","foo2_fn","foo1_fn","foo2_fn","BinIter","Binary","Iter","UIntIter","bin_iter","borrow","borrow_mut","from","into","into_iter","new","next","pop","try_from","try_into","type_id","BinIter","Binary","Iter","UIntIter","bin_iter","pop","qux1","qux_long","qux1","qux_long","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","add","add","add","add","add_assign","add_assign","borrow","borrow_mut","clone","clone_into","div","div","div","div","div_assign","div_assign","eq","equivalent","fmt","fmt","from","from","hash","into","modulus","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","new","product","product","rem_euclid_u32","sub","sub","sub","sub","sub_assign","sub_assign","sum","sum","to_owned","to_string","try_from","try_into","type_id","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","rem_euclid_u32"],"q":[[0,"nekolib_doc::bar"],[1,"nekolib_doc::bar::bar1"],[2,"nekolib_doc::baz"],[3,"nekolib_doc::baz::baz1"],[4,"nekolib_doc::fmt"],[110,"nekolib_doc::fmt::str_sep"],[116,"nekolib_doc::fmt::yes_no"],[117,"nekolib_doc::foo"],[119,"nekolib_doc::foo::foo1"],[120,"nekolib_doc::foo::foo2"],[121,"nekolib_doc::integer"],[137,"nekolib_doc::integer::bin_iter"],[143,"nekolib_doc::macros"],[145,"nekolib_doc::macros::qux"],[147,"nekolib_doc::math"],[201,"nekolib_doc::math::modint"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2 進法のイテレータ。","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","2 進法のイテレータ。","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,3,7,8,9,10,11,12,3,7,8,9,10,11,12,3,3,3,3,3,3,3,3,3,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,11,11,11,11,11,12,12,12,12,12,3,7,8,9,10,11,12,3,7,8,9,10,11,12,3,7,8,9,10,11,12,3,7,8,9,10,11,12,3,7,8,9,10,11,12,3,7,8,9,10,11,12,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,24,16,16,16,16,16,16,16,15,16,16,16,0,0,24,0,24,15,0,0,0,0,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,19,19,19,19,19,19,19,19,19,19,19,19,19,0,0,0,0,20],"f":[[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[[3,[[0,[1,2]]]],4],[[6,[5]]]],[[7,4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[8,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[9,[[0,[1,2]]]],4],[[6,[5]]]],[[[10,[[0,[1,2]]]],4],[[6,[5]]]],[[[10,[[0,[1,2]]]],4],[[6,[5]]]],[[[10,[[0,[1,2]]]],4],[[6,[5]]]],[[[10,[[0,[1,2]]]],4],[[6,[5]]]],[[[10,[[0,[1,2]]]],4],[[6,[5]]]],[[[11,[[0,[1,2]]]],4],[[6,[5]]]],[[[11,[[0,[1,2]]]],4],[[6,[5]]]],[[[11,[[0,[1,2]]]],4],[[6,[5]]]],[[[11,[[0,[1,2]]]],4],[[6,[5]]]],[[[11,[[0,[1,2]]]],4],[[6,[5]]]],[[[12,[[0,[1,2]]]],4],[[6,[5]]]],[[[12,[[0,[1,2]]]],4],[[6,[5]]]],[[[12,[[0,[1,2]]]],4],[[6,[5]]]],[[[12,[[0,[1,2]]]],4],[[6,[5]]]],[[[12,[[0,[1,2]]]],4],[[6,[5]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],[[],14],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[15,[[16,[15]]]],[[[16,[15]]],17],[[],[[17,[18]]]],[[],6],[[],6],[[],14],0,0,0,0,[[]],[[],[[17,[18]]]],0,0,0,0,0,0,0,0,[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[]],[[]],[19,19],[[]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19],18],[[],18],[[19,4],[[6,[5]]]],[[19,4],[[6,[5]]]],[20,19],[[]],[[19,21]],[[]],[[],22],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[19],[19],[20,19],[23,19],[23,19],[22,22],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[[19,19]],[23,19],[23,19],[[]],[[],13],[[],6],[[],6],[[],14],0,0,0,0,[22,22]],"c":[],"p":[[8,"IntoIterator"],[8,"Clone"],[3,"SpaceSep"],[3,"Formatter"],[3,"Error"],[4,"Result"],[3,"YesNo"],[3,"PerLine"],[3,"StrSep"],[3,"SpaceSepUsize1"],[3,"PerLineUsize1"],[3,"StrSepUsize1"],[3,"String"],[3,"TypeId"],[8,"Binary"],[3,"UIntIter"],[4,"Option"],[15,"bool"],[3,"StaticModInt"],[8,"RemEuclidU32"],[8,"Hasher"],[15,"u32"],[8,"Iterator"],[8,"BinIter"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
