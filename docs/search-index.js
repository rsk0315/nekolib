var searchIndex = JSON.parse('{\
"nekolib_doc":{"doc":"","t":"DLLLLLLLLLLLLLLDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDDDIIQDKLLLLLLLKLLLIIQDKKOOOOGGIDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLGGIDK","n":["UnionFind","borrow","borrow_mut","count","equiv","from","into","new","partition","partition_len","repr","try_from","try_into","type_id","unite","UnionFind","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","PerLine","PerLineUsize1","SpaceSep","SpaceSepUsize1","StrSep","StrSepUsize1","YesNo","BinIter","Binary","Iter","UIntIter","bin_iter","borrow","borrow_mut","from","into","into_iter","new","next","pop","try_from","try_into","type_id","BinIter","Binary","Iter","UIntIter","bin_iter","pop","qux1","qux_long","qux1","qux_long","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","add","add","add","add","add_assign","add_assign","borrow","borrow_mut","clone","clone_into","div","div","div","div","div_assign","div_assign","eq","equivalent","fmt","fmt","from","from","hash","into","modulus","mul","mul","mul","mul","mul_assign","mul_assign","neg","neg","new","product","product","rem_euclid_u32","sub","sub","sub","sub","sub_assign","sub_assign","sum","sum","to_owned","to_string","try_from","try_into","type_id","ModInt1000000007","ModInt998244353","RemEuclidU32","StaticModInt","rem_euclid_u32"],"q":[[0,"nekolib_doc::ds"],[15,"nekolib_doc::ds::union_find"],[16,"nekolib_doc::fmt"],[122,"nekolib_doc::fmt::str_sep"],[128,"nekolib_doc::fmt::yes_no"],[129,"nekolib_doc::integer"],[145,"nekolib_doc::integer::bin_iter"],[151,"nekolib_doc::macros"],[153,"nekolib_doc::macros::qux"],[155,"nekolib_doc::math"],[209,"nekolib_doc::math::modint"]],"d":["","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","2 進法のイテレータ。","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","2 進法のイテレータ。","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,10,13,14,15,16,17,18,10,13,14,15,16,17,18,10,10,10,10,10,10,10,10,10,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,17,17,17,17,17,18,18,18,18,18,10,13,14,15,16,17,18,10,13,14,15,16,17,18,10,13,14,15,16,17,18,10,13,14,15,16,17,18,10,13,14,15,16,17,18,10,13,14,15,16,17,18,0,0,0,0,0,0,0,0,0,28,0,28,21,21,21,21,21,21,21,20,21,21,21,0,0,28,0,28,20,0,0,0,0,0,0,0,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,23,23,23,23,23,23,23,23,23,23,23,23,23,0,0,0,0,24],"f":[0,[[]],[[]],[[1,2],2],[[1,2,2],3],[[]],[[]],[2,1],[1,[[5,[[5,[2,4]],4]]]],[1,2],[[1,2],2],[[],6],[[],6],[[],7],[[1,2,2],3],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[[10,[[0,[8,9]]]],11],[[6,[12]]]],[[13,11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[14,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[15,[[0,[8,9]]]],11],[[6,[12]]]],[[[16,[[0,[8,9]]]],11],[[6,[12]]]],[[[16,[[0,[8,9]]]],11],[[6,[12]]]],[[[16,[[0,[8,9]]]],11],[[6,[12]]]],[[[16,[[0,[8,9]]]],11],[[6,[12]]]],[[[16,[[0,[8,9]]]],11],[[6,[12]]]],[[[17,[[0,[8,9]]]],11],[[6,[12]]]],[[[17,[[0,[8,9]]]],11],[[6,[12]]]],[[[17,[[0,[8,9]]]],11],[[6,[12]]]],[[[17,[[0,[8,9]]]],11],[[6,[12]]]],[[[17,[[0,[8,9]]]],11],[[6,[12]]]],[[[18,[[0,[8,9]]]],11],[[6,[12]]]],[[[18,[[0,[8,9]]]],11],[[6,[12]]]],[[[18,[[0,[8,9]]]],11],[[6,[12]]]],[[[18,[[0,[8,9]]]],11],[[6,[12]]]],[[[18,[[0,[8,9]]]],11],[[6,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[20,[[21,[20]]]],[[[21,[20]]],22],[[],[[22,[3]]]],[[],6],[[],6],[[],7],0,0,0,0,[[]],[[],[[22,[3]]]],0,0,0,0,0,0,0,0,[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[]],[[]],[23,23],[[]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23],3],[[],3],[[23,11],[[6,[12]]]],[[23,11],[[6,[12]]]],[24,23],[[]],[[23,25]],[[]],[[],26],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[23],[23],[24,23],[27,23],[27,23],[26,26],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[[23,23]],[27,23],[27,23],[[]],[[],19],[[],6],[[],6],[[],7],0,0,0,0,[26,26]],"c":[],"p":[[3,"UnionFind"],[15,"usize"],[15,"bool"],[3,"Global"],[3,"Vec"],[4,"Result"],[3,"TypeId"],[8,"IntoIterator"],[8,"Clone"],[3,"SpaceSep"],[3,"Formatter"],[3,"Error"],[3,"YesNo"],[3,"PerLine"],[3,"StrSep"],[3,"SpaceSepUsize1"],[3,"PerLineUsize1"],[3,"StrSepUsize1"],[3,"String"],[8,"Binary"],[3,"UIntIter"],[4,"Option"],[3,"StaticModInt"],[8,"RemEuclidU32"],[8,"Hasher"],[15,"u32"],[8,"Iterator"],[8,"BinIter"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
